# Dont forget to set the env variables CERT_EMAIL, CERT_DOMAIN_PRIMARY and CERT_DOMAIN_ALTERNATE
Resources:
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:
  # Forces https (redirect http to https)
  /etc/nginx/conf.d/00_force_https.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        listen 8080;
        return 301 https://$host$request_uri;
      }
  # Allow Let's Encrypt challenge verification
  /etc/nginx/conf.d/01_lets_encrypt_verification.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        listen 8080;
        location ~ /.well-known/  {
            root /var/www/acme-challenge/;
        }
      }
  # Main node.js server
  /etc/nginx/conf.d/https_custom_server.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
        server {
            listen       443 default ssl;
            server_name  localhost;
            error_page   497 https://$host$request_uri;

            # save health logs in hourly files
            if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
                set $year $1;
                set $month $2;
                set $day $3;
                set $hour $4;
            }
            access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
            access_log /var/log/nginx/access.log main;

            ssl_certificate           /etc/letsencrypt/live/ebcert/fullchain.pem;
            ssl_certificate_key       /etc/letsencrypt/live/ebcert/privkey.pem;
            ssl_session_timeout       5m;
            ssl_protocols             TLSv1.1 TLSv1.2;
            ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
            ssl_prefer_server_ciphers on;
            if ($ssl_protocol = "") {
                rewrite ^ https://$host$request_uri? permanent;
            }

            location / {
                proxy_pass         http://nodejs;
                proxy_set_header   Connection "";
                proxy_http_version 1.1;
                proxy_set_header   Host            $host;
                proxy_set_header   X-Real-IP       $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   Upgrade         $http_upgrade;
                proxy_set_header   Connection      "upgrade";
            }

            # gzip on;
            # gzip_comp_level 4;
            # gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/x$
        }

packages:
  yum:
    epel-release: []

container_commands:
  00_createdir:
    command: "mkdir /opt/certbot || true"
  05_createdir:
    command: "mkdir /var/www/acme-challenge || true"
  10_installcertbot:
    command: "wget https://dl.eff.org/certbot-auto -O /opt/certbot/certbot-auto"
  20_permission:
    command: "chmod a+x /opt/certbot/certbot-auto"
  30_getcert:
    command: "sudo /opt/certbot/certbot-auto certonly --debug --non-interactive --email ${CERT_EMAIL} --agree-tos --authenticator webroot --webroot-path /var/www/acme-challenge --domain ${CERT_DOMAIN_PRIMARY} --domain ${CERT_DOMAIN_ALTERNATE} --keep-until-expiring --installer nginx"
  40_link:
    command: "ln -sf /etc/letsencrypt/live/${CERT_DOMAIN_PRIMARY} /etc/letsencrypt/live/ebcert"
  50_config:
    command: "mv /etc/nginx/conf.d/https_custom_server.pre /etc/nginx/conf.d/https_custom_server.conf"
  90_cronjob_renew:
    command: "cat .ebextensions/cron_certificate_renew.txt > /etc/cron.d/certificate_renew && chmod 644 /etc/cron.d/certificate_renew"
